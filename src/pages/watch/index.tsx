import * as React from 'react';
import Button from '@mui/material/Button';
import Dialog from '@mui/material/Dialog';
import ListItemText from '@mui/material/ListItemText';
import ListItem from '@mui/material/ListItem';
import List from '@mui/material/List';
import Divider from '@mui/material/Divider';
import AppBar from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import IconButton from '@mui/material/IconButton';
import Slide from '@mui/material/Slide';
import { TransitionProps } from '@mui/material/transitions';
import Head from 'next/head'
import { styled, alpha, useTheme } from '@mui/material/styles';
import { useRouter } from "next/router";
import theme from '@/styles/theme';
import MenuIcon from '@mui/icons-material/Menu';
import SearchIcon from '@mui/icons-material/Search';
import AccountCircle from '@mui/icons-material/AccountCircleOutlined';
import NotificationsIcon from '@mui/icons-material/NotificationsNoneOutlined';
import MoreIcon from '@mui/icons-material/MoreVert';
import VideoCallIcon from '@mui/icons-material/VideoCallOutlined';
import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';
import Image from 'next/image';
import { Box, Paper, InputBase, Tooltip, Badge, Avatar, Chip } from '@mui/material';
import Grid from '@mui/material/Grid';

const Item = styled(Paper)(({ theme }) => ({
    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
    ...theme.typography.body2,
    padding: theme.spacing(1),
    textAlign: 'center',
    color: theme.palette.text.secondary,
}));

const Transition = React.forwardRef(function Transition(
    props: TransitionProps & {
        children: React.ReactElement;
    },
    ref: React.Ref<unknown>,
) {
    return <Slide direction="up" ref={ref} {...props} />;
});

const StyledIconButton = styled(IconButton)(({ theme }) => ({
    backgroundColor: "#F2F2F2",
    '&:hover': {
        backgroundColor: "#D9D9D9",
    },
    marginLeft: "0.5rem"
}));

export default function FullScreenDialog() {
    const [openDialog, setOpenDialog] = React.useState(true);
    const [open, setOpen] = React.useState(false);
    const loading = false

    const handleDrawerOpen = () => {
        setOpen(true);
    };

    const handleDrawerClose = () => {
        setOpen(false);
    };

    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {
        setMobileMoreAnchorEl(event.currentTarget);
    };
    const theme = useTheme();
    const menuId = 'primary-search-account-menu';
    const router = useRouter();
    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =
        React.useState<null | HTMLElement>(null);

    const isMenuOpen = Boolean(anchorEl);
    const isLoggedIn = Boolean(true);
    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);
    const [anchorNotificationEl, setNotificationAnchorEl] = React.useState<null | HTMLElement>(null);
    const openNotification = Boolean(anchorNotificationEl);
    const handleClick = (event: React.MouseEvent<HTMLElement>) => {
        setNotificationAnchorEl(event.currentTarget);
    };
    const handleClose = () => {
        setNotificationAnchorEl(null);
    };

    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {
        setAnchorEl(event.currentTarget);
    };

    const handleMobileMenuClose = () => {
        setMobileMoreAnchorEl(null);
    };

    const handleMenuClose = () => {
        setAnchorEl(null);
        handleMobileMenuClose();
    };
    const {
        title,
    } = router.query;
    const handleClickOpen = () => {
        setOpen(true);
    };

    const handleCloseDialog = () => {
        setOpenDialog(false);
        router.back()
    };

    return (
        <div>
            <>
                <Head>
                    <title>{title}</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
            </>
            <Dialog
                fullScreen
                open={openDialog}
                onClose={handleCloseDialog}
                TransitionComponent={Transition}
            >
                <AppBar sx={{ position: 'relative' }} color="inherit" elevation={0}>
                    <Toolbar>
                        <IconButton
                            edge="start"
                            color="inherit"
                            aria-label="open drawer"
                        >
                            <MenuIcon sx={{ stroke: "#ffffff", strokeWidth: 1.2, fontSize: 30 }} onClick={handleCloseDialog} />
                        </IconButton>
                        <Image src={theme.palette.mode === 'dark' ? "/YouTube-White.png" : "/YouTube.png"} alt="logo" width={117} height={75} quality={97} />
                        <Box sx={{ flexGrow: 1 }} />
                        <Paper

                            elevation={0}
                            component="form"
                            sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: 600, borderRadius: "50px", border: "1px solid #CCCCCC", }}
                        >
                            <InputBase
                                sx={{ ml: 1, flex: 1 }}
                                placeholder="   Search"
                                inputProps={{ 'aria-label': 'search youtube' }}
                            />
                            <Paper sx={{ borderTopRightRadius: "50px", borderBottomRightRadius: "50px", bgColor: "red" }}>
                                <Divider orientation="vertical" />
                                <IconButton color="primary" sx={{ p: '10px' }} aria-label="search">
                                    <SearchIcon sx={{ color: "#000", stroke: "#ffffff", strokeWidth: 0.7 }} />
                                </IconButton>
                            </Paper>
                        </Paper>
                        <StyledIconButton sx={{ display: { xs: 'none', md: 'flex' } }} >
                            <Tooltip title="Search with your voice">
                                <KeyboardVoiceIcon sx={{ color: "#000" }} />
                            </Tooltip>
                        </StyledIconButton>
                        <Box sx={{ flexGrow: 1 }} />
                        {isLoggedIn ? (
                            <Box sx={{ display: { xs: 'none', md: 'flex' }, }}>
                                <IconButton color="inherit"
                                //   onClick={handleMobileMenuOpen}
                                >
                                    <Tooltip title="Create">
                                        <VideoCallIcon sx={{ stroke: "#ffffff", strokeWidth: 1, fontSize: 30 }} />
                                    </Tooltip>
                                </IconButton>
                                <IconButton
                                    aria-label="show new notifications"
                                    color="inherit"
                                    onClick={handleClick}
                                >
                                    <Tooltip title="Notification">
                                        <Badge badgeContent={0} color="error">
                                            <NotificationsIcon fontSize="large" sx={{ stroke: "#ffffff", strokeWidth: 1, fontSize: 30 }} />
                                        </Badge>
                                    </Tooltip>
                                </IconButton>
                                <IconButton
                                    edge="end"
                                    aria-label="account of current user"
                                    aria-controls={menuId}
                                    aria-haspopup="true"
                                    onClick={handleProfileMenuOpen}
                                    color="inherit"
                                >
                                    <Avatar src="https://yt3.ggpht.com/yti/ADpuP3OnvT0N-o1FPFYmxTFMifN5FEwud9LOrTODFw=s88-c-k-c0x00ffffff-no-rj" sx={{ width: 34, height: 33 }} />
                                </IconButton>
                            </Box>
                        ) : (
                            <Box sx={{ display: { xs: 'none', md: 'flex' }, }}>
                                <IconButton
                                    aria-haspopup="true"
                                    onClick={handleProfileMenuOpen}
                                    color="inherit"
                                >
                                    <MoreIcon />
                                </IconButton>
                                <Chip icon={<AccountCircle sx={{ stroke: "#ffffff", strokeWidth: 0.8, fill: "#095ED5" }} />} label="Sign in" variant="outlined" sx={{ color: "#095ED5", cursor: "pointer" }} />
                            </Box>
                        )}
                    </Toolbar>
                </AppBar>
                <Box px={3}>
                    <Grid container spacing={2}>
                        <Grid item xs={12} md={8}>
                            <Item>player</Item>
                        </Grid>
                        <Grid item xs={12} md={4} sx={{height:"100%"}}>
                            <Item>playllist</Item>
                        </Grid>
                        <Grid item xs={12} md={7}>
                            <Item>comments</Item>
                        </Grid>

                    </Grid>
                </Box>
            </Dialog>
        </div>
    );
}